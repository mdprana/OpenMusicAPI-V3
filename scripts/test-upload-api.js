const axios = require('axios');\nconst FormData = require('form-data');\nconst fs = require('fs');\nconst path = require('path');\n\nasync function testUploadAPI() {\n  console.log('Testing Upload API with proper multipart/form-data...\\n');\n\n  const baseURL = 'http://localhost:5000';\n  \n  try {\n    // Step 1: Create an album first\n    console.log('Step 1: Creating a test album...');\n    const albumResponse = await axios.post(`${baseURL}/albums`, {\n      name: 'Test Album for Upload',\n      year: 2024\n    });\n    \n    const albumId = albumResponse.data.data.albumId;\n    console.log(`Album created with ID: ${albumId}`);\n    \n    // Step 2: Test file upload with different scenarios\n    console.log('\\nStep 2: Testing file uploads...');\n    \n    // Test 1: No file (should return 400)\n    console.log('\\nTest 1: No file provided');\n    try {\n      const formData = new FormData();\n      await axios.post(`${baseURL}/albums/${albumId}/covers`, formData, {\n        headers: formData.getHeaders()\n      });\n    } catch (error) {\n      console.log(`Expected 400, got: ${error.response?.status}`);\n      console.log(`Response: ${JSON.stringify(error.response?.data)}`);\n    }\n    \n    // Test 2: Check if test image exists\n    const testImagePath = path.join(__dirname, '..', 'image', 'picture-small.jpg');\n    if (fs.existsSync(testImagePath)) {\n      console.log('\\nTest 2: Valid image file');\n      try {\n        const formData = new FormData();\n        formData.append('cover', fs.createReadStream(testImagePath));\n        \n        const response = await axios.post(`${baseURL}/albums/${albumId}/covers`, formData, {\n          headers: formData.getHeaders()\n        });\n        \n        console.log(`Status: ${response.status}`);\n        console.log(`Response: ${JSON.stringify(response.data)}`);\n      } catch (error) {\n        console.log(`Error: ${error.response?.status}`);\n        console.log(`Response: ${JSON.stringify(error.response?.data)}`);\n      }\n    } else {\n      console.log('\\nTest 2: Skipped - test image not found at:', testImagePath);\n    }\n    \n    // Test 3: Text file (should return 400)\n    const testTextPath = path.join(__dirname, '..', 'image', 'text-small.txt');\n    if (fs.existsSync(testTextPath)) {\n      console.log('\\nTest 3: Non-image file');\n      try {\n        const formData = new FormData();\n        formData.append('cover', fs.createReadStream(testTextPath));\n        \n        await axios.post(`${baseURL}/albums/${albumId}/covers`, formData, {\n          headers: formData.getHeaders()\n        });\n      } catch (error) {\n        console.log(`Expected 400, got: ${error.response?.status}`);\n        console.log(`Response: ${JSON.stringify(error.response?.data)}`);\n      }\n    }\n    \n    // Test 4: Get album with cover URL\n    console.log('\\nTest 4: Get album with cover URL');\n    const getAlbumResponse = await axios.get(`${baseURL}/albums/${albumId}`);\n    console.log(`Album coverUrl: ${getAlbumResponse.data.data.album.coverUrl}`);\n    \n  } catch (error) {\n    console.error('Test failed:', error.message);\n    if (error.response) {\n      console.error('Response status:', error.response.status);\n      console.error('Response data:', error.response.data);\n    }\n  }\n}\n\n// Check if axios and form-data are available\ntry {\n  require('axios');\n  require('form-data');\n  testUploadAPI();\n} catch (error) {\n  console.log('Missing dependencies. Installing...');\n  console.log('Run: npm install axios form-data');\n  console.log('Then run this test again.');\n}\n